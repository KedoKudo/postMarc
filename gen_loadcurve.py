#!/usr/bin/env python

'''
Generate stress v.s strain curve
'''

#-----------------------------------------------------------------------------#
# Headers and Library
#-----------------------------------------------------------------------------#
from __future__ import division
import matplotlib
matplotlib.use('agg')
import matplotlib.pyplot as plt
import sys
import argparse

#-----------------------------------------------------------------------------#
# Control Macro
#-----------------------------------------------------------------------------#
LINENUMS = int(100/4) + 1

#-----------------------------------------------------------------------------#
# Start of Plotting
#-----------------------------------------------------------------------------#
def main():
    '''
    '''
    parser = argparse.ArgumentParser(prog="loadcruve",
                                     description='''
                                     Generating load curve from ASCII table
                                     generated by Marc/Mentat''',
                                     epilog='''
                                     All figures will be combined into one
                                     single movie''')
    parser.add_argument("input_file",
                        help='''help
                        input file name of the ASCII talbe''',
                        default='test.txt')
    parser.add_argument("-v", "--version",
                        action="version",
                        version="%(prog)s 0.1")
    # start parsing file
    args = parser.parse_args()
    filename = args.input_file
    rawdata_x = open(filename).readlines()[27:27+LINENUMS]
    rawdata_y = open(filename).readlines()[27+LINENUMS+1: -4]
    data_x = []
    data_y = []
    for line in rawdata_x:
        for item in line.split():
            data_x.append(float(item))
    for line in rawdata_y:
        for item in line.split():
            data_y.append(float(item)/1e9)
    # plot curve
    total_inc = len(data_x)
    for index in range(0,total_inc):
        plt.figure
        plt.plot(data_x, data_y)
        plt.plot(data_x[index], data_y[index], 'ro', markersize=10)
        plt.xlabel("Displacement in um")
        plt.ylabel("Force")
        plt.xlim((0.0,6.5))
        plt.ylim((0.0,3))
        plt.title("INC%3d"%(index*4))
        fname = '_tmp%03d.png'%index
        print "save {} to ./".format(fname)
        plt.savefig(fname)
        plt.clf()
#-----------------------------------------------------------------------------#
# End of File
#-----------------------------------------------------------------------------#
if __name__ == "__main__":
    main()
